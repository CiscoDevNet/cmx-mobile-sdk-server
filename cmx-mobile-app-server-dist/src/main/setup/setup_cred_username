#
# cred_username 
#

test_cred_username() {
    if [ "$input_group_cred" = "$ENTER_INPUT" ]; then
        return $RC_EXEC
    else
        return $RC_SKIP
    fi
}

reset_cred_username() {
    cred_username="$DEF_CRED_USERNAME"
    echo "The communication username will be reset to \"$cred_username\"" >& 2
}

print_default_cred_username() {
    cred_username="$DEF_CRED_USERNAME"
    echo "Default username=[$DEF_CRED_USERNAME]" >& 2
}

print_current_cred_username() {
    if [ -f $USER_PROP_FILE ]; then
        CRED_USERNAME_CHECK=`wc -m $USER_PROP_FILE  | awk '{print $1}'`
        if [ $CRED_USERNAME_CHECK -gt 0 ]; then
            echo "Communication username is currently configured" >& 2
        else
            echo "Communication username has not been configured" >& 2
        fi
    else
        echo "Communication username has not been configured" >& 2
    fi
    return $RC_OK
}

prompt_cred_username() {
cat <<EOF >&2

Enter an admin username. 
The admin user is used to authenticate MSE configuration data.
Once this password is updated, it must correspondingly be updated
on the MSE UI page for Mobile App Enablement Parameters so that the
MSE can communicate with the server.

EOF
}

read_cred_username() {
   read_default "Enter a communication username" "$cred_username"
}

validate_cred_username() {
    echo "$read_result" | grep -q '[^-A-Za-z0-9]'
    if [ $? -eq 0 ]; then
        echo "The communication username can only contain letters, numbers, and dashes." >&2
        return $RC_ERROR
    fi
    cred_username="$read_result"

   return $RC_OK
}

apply_cred_username() {
    if [ "$input_group_cred" = "$SKIP_INPUT" ]; then
        return $RC_OK
    fi

    return $RC_OK
}
