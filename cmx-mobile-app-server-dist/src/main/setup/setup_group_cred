#
# group_cred
#

test_group_cred() {
    return $RC_EXEC
}

prompt_group_cred() {
cat <<EOF >&2

EOF
}

print_default_group_cred() {
    print_default_cred_username
    print_default_cred_password
}

print_current_group_cred() {
    print_current_cred_username
    print_current_cred_password
}

read_group_cred() {
    if [ ! -n "$input_group_cred" ]; then
        input_group_password="$SKIP_INPUT"
    fi
    read_default "Configure communication credentials? (Y)es/(S)kip/(U)se default" "$1"
}

validate_group_cred() {
    validate_group_reply

    if [ $? -eq $RC_OK ]; then
        input_group_cred="$input_group_reply"

        if [ $1 != $input_group_cred ]; then
            if [ $1 = $RESET_INPUT -a $input_group_cred = $SKIP_INPUT ]; then
                print_current_cred_username
                print_current_cred_password
            elif [ $input_group_cred = $RESET_INPUT ]; then
                reset_cred_username
                reset_cred_password
            fi
        fi

        return $RC_OK
    else
        return $RC_ERROR
    fi
}

apply_group_cred() {
    return $RC_OK
}

is_configured_group_cred() {
    # Check if credentials are configured
    if [ "$input_group_cred" = "$SKIP_INPUT" ]; then
        if [ ! -n "$curr_cred_username" -o ! -n "$curr_cred_password" ]; then
			CRED_PASSWORD_CHECK=`wc -m $USER_PROP_FILE  | awk '{print $1}'`
			if [ $CRED_PASSWORD_CHECK -le 0 ]; then
				echo "Credentials: Not configured" >& 2
				return $RC_ERROR
			fi
        fi
    fi

    return $RC_OK
}
